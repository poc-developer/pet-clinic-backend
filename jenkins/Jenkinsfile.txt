pipeline {
    agent any
    
    environment {
        DB_USER = credentials('DB_USER')
        DB_PW = credentials('DB_PW')
        DB_PORT = credentials('DB_PORT')
        DB_NAME = credentials('DB_NAME')
        dbUrl = "postgresql://${DB_USER}:${DB_PW}@localhost:${DB_PORT}/${DB_NAME}"
        
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/poc-developer/pet-clinic-backend', branch: 'main'
            }
        }
        stage('Create Virtual Environment ') {
            steps {
                script {
                    echo '=== Creating virtual environment ==='
                    bat 'python -m venv venv'
                    echo '=== Created virtual environment ==='
                }
            }
        }

        stage('Activate Environment') {
            steps {
                script {
                    echo '=== Activating python environment ==='
                    bat 'call venv\\Scripts\\activate'
                    echo '=== Activated python environment ==='
                }
            }
        }

        stage('Install dependencies') {
            steps {
                script {
                    echo '=== Installing dependencies ==='
                    bat 'cd ../'
                    bat 'cd ../'
                    bat 'pip install -r requirements.txt'
                    echo '=== Dependencies Installed ==='
                }
                
            }
        }

        stage('DB Url') {
            steps {
                script {
                    echo "Database Connection URL: ${env.dbUrl}"
                }
                
            }          
        }

        stage('Connect Database') {
            steps {
                echo '=== Connecting Database ==='
                script {
                    // def content = readFile('.venv').trim()
                    // content = content.replace('postgresql://postgres:Bzgpvq86daxLK7Z@localhost:5432/PetClinicDB', '${dbUrl}')
                    // writeFile file: '.venv', text: content
                }
                echo '=== Connected Database ==='
            }
        }

    }
    post {
        success {
            echo 'Build successful'
        }
        failure {
            echo 'Build failed'
        }
    }
}
